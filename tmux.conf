# Set the prefix to ^z.
unbind C-b
set -g prefix C-a
bind a send-prefix


# C-a C-a jumps to previous window
bind-key C-a last-window

# title A
unbind A
bind A command-prompt "rename-window %%"
unbind m
bind m set-option -g mouse

# use PREFIX | to split window horizontally and PREFIX - to split vertically
unbind '"'
unbind %
bind-key '\' split-window -h
bind-key '-' split-window -v

#set-window-option -g utf8 on
bind-key P display-popup -E "tmux new-session -A -s popup"
bind-key G display-popup -E -w 90% -h 80% -b rounded -T "LazyGit" -d "#{pane_current_path}" "lazygit"
bind-key F display-popup -E -w 50% -h 60% -b rounded -T "Floating Shell" -d "#{pane_current_path}"
bind-key C display-popup -E -w 30% -h 40% -x 100% -y 0% -b rounded -T "Calculator" -d "#{pane_current_path}" "qalc"

# more history
set -g history-limit 100000


# resize windows on larger screens - if off the size is capped to the smallest
# screen size that has ever looked at it
setw -g aggressive-resize on

bind J resize-pane -L 1
bind K resize-pane -D 1
bind I resize-pane -U 1
bind L resize-pane -R 1

#set -g status-justify centre # left
# THEME
#set -g window-status-current-bg white
#set -g window-status-current-fg black
#set -g window-status-current-attr bold
#set -g status-interval 60
#set -g status-bg black
#set -g status-fg yellow
##set -g status-interval 1
#set -g status-right-length 50
#set -g status-left-length 50
#set -g status-right '#[fg=yellow]#(cut -d " " -f 1-4 /proc/loadavg)#[default] #[fg=cyan,bold]%Y-%m-%d %H:%M:%S#[default]'
#set -g status-right '#[fg=yellow]| #[default]#[fg=green]#H #[default]| #[fg=cyan,bold] %02d-%02m-%Y#[default] |#[fg=cyan,bold] %H:%M#[default]'
#set -g status-right '#[fg=red, bold]| #H#  | %h %02d-%02m-%Y | %l:%M %p '
#set -g status-right '#[fg=colour10, bold]| #H#  | %02d %h %Y | %l:%M %p '
#set -g status-left '#[fg=colour10, bold][#S #I:#P]#[default] [#(whoami)]'
#set -g status-right '| #[fg=colour10]#H# #[default] | #[fg=colour10]%a %02d/%m/%Y#[default] | #[fg=colour10]%l:%M %p '

#set -g status-right '#[fg=colour11, bold]| #H#  | %h %02d-%02m-%Y | %l:%M %p '

# Highlighting the active window in status bar
#setw -g window-status-current-bg red

# set color for status bar
#set-option -g status-bg colour235 #base02
#set-option -g status-fg yellow #yellow
#set-option -g status-attr dim
# Use vim keybindings in copy mode
setw -g mode-keys vi
# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# force a reload of the config file
unbind r
unbind C-r

#bind-key -n C-r source-file ~/.tmux.conf \; display "config reloaded"
bind r source-file ~/.tmux.conf \; display "config reloaded"
#bind -n C-c clear-history

# smart pane switching with awareness of vim splits
#bind -n C-i run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-i) || tmux select-pane -U"
#bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -D"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
#bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -L"
#
#bind -n C-o run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-o) || tmux select-pane -U"
#bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -D"
#bind -n C-p run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-p) || tmux select-pane -R"
#bind -n C-i run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-i) || tmux select-pane -L"

#show-buffer
#save-buffer
# This tmux statusbar config was created by tmuxline.vim
# on Mon, 23 May 2016

set -g status-bg black
set -g message-command-style fg="color255"
set -g status-justify left
set -g status-left-length "100"
set -g status "on"
set -g pane-active-border-style fg="colour190"
set -g message-style bg="colour238"
set -g status-right-length "100"
set -g status-right-style "none"
set -g message-style bg="colour255"
set -g message-command-style bg="colour238"
set -g status-style "none"
#set -g status-utf8 "on"
set -g pane-border-style bg="colour238"
set -g status-left-style "none"
setw -g window-status-style fg="colour85"
setw -g window-status-style "none"
setw -g window-status-activity-style bg="colour234"
setw -g window-status-activity-style "none"
setw -g window-status-activity-style fg="colour190"
setw -g window-status-separator ""
setw -g window-status-style bg="colour234"
set -g status-left "#[fg=colour17,bg=colour190] #S #I:#P #[fg=colour190,bg=colour234,nobold,nounderscore,noitalics]> "
set -g status-right "#[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]>#[fg=colour255,bg=colour238] sync{#{synchronize-panes}} mouse{#{mouse}} %Y-%m-%d > %H:%M #[fg=colour190,bg=colour238,nobold,nounderscore,noitalics]>#[fg=colour17,bg=colour190] #h "
setw -g window-status-format "#[fg=colour85,bg=colour234]#I:#[fg=colour85,bg=colour234]#W#[fg=colour200,bg=colour234]#(printf '%%s\n' '#F' | tr '-' '^') > "
setw -g window-status-current-format "#[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour17,bg=colour190]#I:#W >#[fg=colour239,bg=colour234,nobold,nounderscore,noitalics] "


#
###
#set window list colors - red for active and cyan for inactive
#set-window-option -g window-status-fg cyan #base0
#set-window-option -g window-status-bg colour236
#set-window-option -g window-status-attr bright
# 
#set-window-option -g window-status-current-fg brightred
#set-window-option -g window-status-current-bg yellow
#set-window-option -g window-status-current-attr bright
# 
#set-window-option -g window-status-last-fg brightred
#set-window-option -g window-status-last-bg colour236
#set-window-option -g window-status-last-attr bright
## pane number display
#set-option -g display-panes-active-colour colour33 #blue
#set-option -g display-panes-colour colour166 #orange
 
# set pane colors - hilight the active pane
#set-option -g pane-border-fg colour235 #base02
#set-option -g pane-active-border-fg colour240 #base01

# colorize messages in the command line
set-option -g message-style bg=black #base02
set-option -g message-style bg=brightred #orange

# Clock
setw -g clock-mode-colour green
setw -g clock-mode-style 24

set-option -g renumber-windows on
bind s setw -g synchronize-panes
set-option -g set-titles on
set-option -g set-titles-string "#{session_name} - #{host}"

set -g pane-active-border-style bg=default,fg=cyan
set -g pane-border-style fg=magenta

#set-window-option -g window-status-last-fg brightred
#set-window-option -g window-status-last-bg yellow
#set-window-option -g window-status-last-attr bright
# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
