alias ff='~/scripts.conf/scripts/ff'
alias fn='~/scripts.conf/scripts/ff ~/all_notes'
alias cdn='cd ~/all_notes'
alias mc='~/scripts.conf/scripts/mk_cscope.sh'
alias cpd='~/scripts.conf/scripts/cpd.sh'
alias dspace='du -bsh'
alias up='~/scripts.conf/scripts/txup'
alias mvm='sshpass -p vijayr123 mosh vijayr@10.27.186.12'
#alias note='vim $HOME/all_notes/arrcus/scratch/notes_$1'
function note() { vim $HOME/all_notes/arrcus/notes/scratch/notes_"$1".txt; }
function mnote() { vim $HOME/all_notes/arrcus/md_notes/scratch/notes_"$1".md; }
function dmnote() {
  d=`date +%d_%b_%Y`
  if [ -z "$2" ]
    then
      dir=$HOME/all_notes/dnotes/scratch/
    else
      dir=$HOME/all_notes/dnotes/"$2"
  fi
  mkdir -p $dir
  if [ -z "$1"  ]
    then
      vim $dir/notes_$d.md
    else
      vim $dir/notes_"$1"_"$d".md
  fi
}
function dnote() {
  d=`date +%d_%b_%Y`
  if [ -z "$2" ]
    then
      dir=$HOME/all_notes/dnotes/scratch/
    else
      dir=$HOME/all_notes/dnotes/"$2"
  fi
  mkdir -p $dir
  if [ -z "$1"  ]
    then
      vim $dir/notes_$d.md
    else
      vim $dir/notes_"$1"_"$d".md
  fi
}
function rmnote() {
  if [ -z "$2" ]
    then
      dir=$HOME/all_notes/arrcus/scratch/
    else
      dir=$HOME/all_notes/arrcus/"$2"
  fi
  mkdir -p $dir
  if [ -z "$1"  ]
    then
      vim $dir/notes_$RANDOM.md
    else
      vim $dir/notes_"$1"_"$RANDOM".md
  fi
}
function rnote() {
  if [ -z "$2" ]
    then
      dir=$HOME/all_notes/arrcus/scratch/
    else
      dir=$HOME/all_notes/arrcus/"$2"
  fi
  mkdir -p $dir
  if [ -z "$1"  ]
    then
      vim $dir/notes_$RANDOM.txt
    else
      vim $dir/notes_"$1"_"$RANDOM".txt
  fi
}
function tnote() {
  mkdir -p /tmp/tnotes/
  if [ -z "$1"  ]
    then
      vim /tmp/tnotes/notes_$RANDOM.txt
    else
      vim /tmp/tnotes/notes_"$1"_"$RANDOM".txt
  fi
}
function pscp() {
  echo "IP = $IP"
  echo "Copying bins"
  sshpass -f ~/scp_pass.txt scp build/bin/*.bin root@$IP:/usr/lib/arcos/;
  echo "Copying libs"
  sshpass -f ~/scp_pass.txt scp build/lib/*.so root@$IP:/usr/lib/;
  echo "Copying capi"
  sshpass -f ~/scp_pass.txt scp .gen/*.so*  root@$IP:/usr/lib/;
  echo "Setting capability"
  sshpass -f ~/scp_pass.txt ssh root@$IP 'python3 /usr/share/arcos/generate_capab.py';
#  echo "Starting Spyder"
#  sshpass -f ~/scp_pass.txt ssh root@$IP 'service spyder start';
}

function epscp() {
  echo "IP = $IP"
  echo "password = $SSHPASS"
  echo "Copying bins"
  sshpass -e scp build/bin/*.bin root@$IP:/usr/lib/arcos/;
  echo "Copying libs"
  sshpass -e scp build/lib/*.so root@$IP:/usr/lib/;
  echo "Copying capi"
  sshpass -e scp .gen/*.so*  root@$IP:/usr/lib/;
  echo "Setting capability"
  sshpass -e ssh root@$IP 'python3 /usr/share/arcos/generate_capab.py';
  echo "Starting Spyder"
  sshpass -e ssh root@$IP 'service spyder start';
}
function p1scp() {
   echo -e "src $1 \ndst $2"
   sshpass -f ~/scp_pass.txt scp $1 $2
}

function pssh() {
  echo "$1"
  sshpass -f ~/scp_pass.txt ssh root@$1
}
alias notes=note
alias mnotes=mnote
alias tnotes=tnote
alias rnotes=rnote
alias rmnotes=rmnote
alias dnotes=dnote
alias dmnotes=dmnote
alias h=history
alias tma='tmux -u attach-session -dt'
alias tml='tmux list-session'
alias tmn='tmux -u new -s'
alias vdiffs='vim -c "Git difftool" -c "set scl=auto"'

alias sgp='export GOPATH=$PWD/debian/gopath/:$PWD/third_party/go/:${PWD}/dep_pkgs/:$PWD/infra/datastore/go/:${PWD}/libutils/logging/go/:${PWD}/infra/ppmgr/go/:${PWD}/infra/iptrack/go/:${PWD}/routing/srv6oam/go/:${PWD}/infra/pubsub/go/:${PWD}/infra/pfcp/go/:/usr/lib/arcos/go:/usr/lib/arcos/go/;echo $GOPATH;'
alias ascp='scp build/bin/*.bin root@$IP:/usr/lib/arcos/;scp build/lib/*.so root@$IP:/usr/lib/; scp .gen/*.so*  root@$IP:/usr/lib/'

alias l2='pssh 10.27.102.14'
alias l2='pssh 10.27.102.12'
alias l3='pssh 10.27.102.43'
alias s1='pssh 10.27.102.38'
alias s2='pssh 10.27.102.16'
alias el1='sshpass -f ~/scp_pass_npci.txt ssh root@10.27.102.14'
alias el2='sshpass -f ~/scp_pass_npci.txt ssh root@10.27.102.12'
alias el3='sshpass -f ~/scp_pass_npci.txt ssh root@10.27.102.43'
alias es1='sshpass -f ~/scp_pass_npci.txt ssh root@10.27.102.38'
alias es2='sshpass -f ~/scp_pass_npci.txt ssh root@10.27.102.16'


function th5tb() {
  tmux new-window -n 'th5_setup' 'sshpass -f ~/scp_pass.txt ssh root@10.27.106.12'
  tmux split-window -h 'sshpass -f ~/scp_pass.txt ssh root@10.27.106.10'
  tmux select-pane -t 0
  tmux split-window -v 'sshpass -f ~/scp_pass.txt ssh root@10.27.106.14'
  tmux select-pane -t 2
  tmux split-window -v 'sshpass -f ~/scp_pass.txt ssh root@10.27.106.8'
}

function cdown() {
  if [[ -z "$1" ]]; then
    echo "Usage: countdown <time>[m|s]"
    echo "Example: countdown 2m (2 minutes) or countdown 90s (90 seconds)"
    return 1
  fi

  local input="$1"
  local seconds=0

  if [[ "$input" == *m ]]; then
    seconds=$(( ${input%m} * 60 ))  # Remove 'm' and convert to seconds
  elif [[ "$input" == *s ]]; then
    seconds=$(( ${input%s} ))  # Remove 's' and keep as seconds
  else
    echo "Invalid format. Use <number>m for minutes or <number>s for seconds."
    return 1
  fi

  while [[ $seconds -gt 0 ]]; do
    local min=$((seconds / 60))
    local sec=$((seconds % 60))
    echo -ne "Time remaining: ${min}m ${sec}s\033[0K\r"
    sleep 1
    ((seconds--))
  done
  echo -e "\nTime's up! ‚è∞"
}


function cup() {
  start_time=$SECONDS
  while true; do
    elapsed=$(( SECONDS - start_time ))
    hours=$(( elapsed / 3600 ))
    minutes=$(( (elapsed % 3600) / 60 ))
    seconds=$(( elapsed % 60 ))
    echo -ne "Elapsed Time: ${hours}h ${minutes}m ${seconds}s\r"
    sleep 1
  done
}

export EDITOR=nvim
export CSCOPE_EDITOR=nvim
